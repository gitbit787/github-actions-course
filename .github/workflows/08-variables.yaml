name: 08 - Using Variables

on:
  push:
  workflow_dispatch:
    inputs:
      workflow_type:
        type: string
        default: prod
        description: determine which type of environment will be configured

env:
  WORKFLOW_VAR: "I am a workflow var"
  OVERWRITTEN: "I will be overwritten"
  UNDEFINED_VAR_WITH_DEFAULT: ${{ vars.UNDEFINED_VAR || 'default value' }}

# changes for debug purposes

jobs:
  echo-job-var:
    runs-on: ubuntu-latest
    env:
      JOB_VAR: 'I am a env job var'
      OVERWRITTEN: 'I have been overwritten by env job var'
    steps:
      - name: print env vars
        env:
          STEP_VAR: 'I am a step env var'
          STEP_VAR2: 'I am another step env var'
        run: |
          echo "steps env var: ${{ env.STEP_VAR }}"
          echo "steps env var2: ${{ env.STEP_VAR2 }}"
          echo "job env var: ${{ env.JOB_VAR }}"
          echo "Workflow env var: ${{ env.WORKFLOW_VAR }}"
          echo "Overwritten env var: ${{ env.OVERWRITTEN }}"
      - name: Overwritten job variable
        run: |
          echo "Step env var: ${{ env.OVERWRITTEN }}"
        env:
          OVERWRITTEN: 'I have been overwritten by step level'
  echo-repo-var:
    runs-on: ubuntu-latest
    steps:
      - name: Print Repository Var
        run: "echo Repository Var: ${{ vars.REPOSITORY_VAR }}"
  echo-prod-var:
    runs-on: ubuntu-latest
    environment: ${{ inputs.workflow_type }}
    steps:
      - name: Print prod var
        run: |
          echo "Overwritten env var: ${{ vars.OVERWRITTEN_VAR }}"
          echo "Repository env var: ${{ vars.REPOSITORY_VAR }}"
          echo "Target env var: ${{ vars.TARGET_VAR }}"
          echo "Input value: ${{ inputs.workflow_type }}"
  echo-undefined-var:
    runs-on: ubuntu-latest
    steps:
      - name: Print undefined var
        run: "echo Undefined var: ${{ env.UNDEFINED_VAR_WITH_DEFAULT }}"